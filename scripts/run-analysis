#!/bin/sh
echo '## Set variables ##'
EXCLUSIONS="**/*.Tests/**,**/bin/**,**/obj/**,**/snyk_report.html,**/workspace_snyk_report.html"
REPORT_PATH="/home/dotnet/working/project/test-output/coverage.opencover.xml"

echo '## Ensure directory clean for analysis ##'
rm -rf home/dotnet/working

echo '## Copy project to working folder ##'
cp -r /home/dotnet/project /home/dotnet/working

echo '## Starting SonarCloud analysis ##'
# check if PR or main build
if [[ -z "${SONAR_PR_KEY}" ]]; then
  dotnet sonarscanner begin \
  /k:${SONAR_PROJECT_KEY} \
  /o:${SONAR_ORGANIZAION_KEY} \
  /d:sonar.host.url=${SONAR_HOST_URL} \
  /d:sonar.login=${SONAR_TOKEN} \
  /d:sonar.cs.exclusions=$EXCLUSIONS \
  /d:sonar.cs.opencover.reportsPaths=$REPORT_PATH \
  /d:sonar.exclusions=$EXCLUSIONS
else
  dotnet sonarscanner begin \
  /k:${SONAR_PROJECT_KEY} \
  /o:${SONAR_ORGANIZAION_KEY} \
  /d:sonar.host.url=${SONAR_HOST_URL} \
  /d:sonar.login=${SONAR_TOKEN} \
  /d:sonar.pullrequest.base=${SONAR_PR_BASE} \
  /d:sonar.pullrequest.branch=${SONAR_PR_BRANCH} \
  /d:sonar.pullrequest.key=${SONAR_PR_KEY} \
  /d:sonar.pullrequest.provider=${SONAR_PR_PROVIDER} \
  /d:sonar.pullrequest.github.repository=${SONAR_PR_REPOSITORY} \
  /d:sonar.cs.exclusions=$EXCLUSIONS \
  /d:sonar.cs.opencover.reportsPaths=$REPORT_PATH \
  /d:sonar.exclusions=$EXCLUSIONS
fi

echo '## Build .Net Core solution ##'
dotnet build /home/dotnet/working/project

echo '## Complete SonarCloud analysis ##'
dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}
